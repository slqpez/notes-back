{"version":3,"sources":["components/Note.jsx","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","axios","get","newObject","post","id","put","App","useState","notesState","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","then","response","data","notesToShow","filter","className","e","preventDefault","map","find","n","changedNote","catch","error","alert","toggleImportanceOf","onSubmit","event","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAaeA,EAXF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACZC,EAAOF,EAAKG,UAAW,oBAC5B,iBACH,OACE,gCACE,6BAAKH,EAAKI,UACV,wBAAQC,QAASJ,EAAjB,SAAoCC,Q,gBCPpCI,EAAU,uDAcD,EAZA,WACb,OAAOC,IAAMC,IAAIF,IAWJ,EARA,SAAAG,GACb,OAAOF,IAAMG,KAAKJ,EAASG,IAOd,EAJA,SAACE,EAAIF,GAClB,OAAOF,IAAMK,IAAN,UAAaN,EAAb,YAAwBK,GAAMF,ICwExBI,EA9EH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACTC,EADS,KACGC,EADH,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,KAKhBC,qBAAU,WACRC,IAECC,MAAK,SAAAC,GACJR,EAASQ,EAASC,WAEnB,IAwBH,IAgBMC,EAAcP,EAChBJ,EACAA,EAAWY,QAAO,SAAC3B,GAAD,OAAUA,EAAKG,aAErC,OACE,qBAAKyB,UAAU,MAAf,SACE,gCACE,uCACA,yBAAQA,UAAU,eAAevB,QA5BvC,SAAuBwB,GACrBA,EAAEC,iBACFV,GAAYD,IA0BR,kBACQA,EAAU,aAAe,SAEjC,6BACGO,EAAYK,KAAI,SAAC/B,GAAD,OACf,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBA7BjC,SAACU,GAC1B,IAAMX,EAAOe,EAAWiB,MAAK,SAAAC,GAAC,OAAIA,EAAEtB,KAAOA,KACrCuB,EAAW,2BAAQlC,GAAR,IAAcG,WAAYH,EAAKG,YAEhDmB,EACUX,EAAIuB,GACXX,MAAK,SAAAC,GACJR,EAASD,EAAWgB,KAAI,SAAA/B,GAAI,OAAIA,EAAKW,KAAOA,EAAKX,EAAOwB,EAASC,YAChEU,OAAM,SAAAC,GACPC,MAAM,aAAD,OACUrC,EAAKI,QADf,sCAGLY,EAASD,EAAWY,QAAO,SAAAM,GAAC,OAAIA,EAAEtB,KAAOA,SAiBiB2B,CAAmBtC,EAAKW,MAAnEX,EAAKW,SAGpB,uBAAM4B,SAtDZ,SAAiBC,GACfA,EAAMV,iBACN,IAAMW,EAAa,CACjBrC,QAASa,EACTyB,MAAM,IAAIC,MAAOC,cACjBzC,UAAW0C,KAAKC,SAAW,GAC3BnC,GAAII,EAAWgC,OAAS,GAE1BzB,EACUmB,GACPlB,MAAK,SAAAC,GACJR,EAASD,EAAWiC,OAAOxB,EAASC,OACpCP,EAAW,QA0CX,UACE,uBAAO+B,MAAOhC,EAASiC,SAxC/B,SAA0BrB,GACxBX,EAAWW,EAAEsB,OAAOF,UAwCd,wBAAQrB,UAAU,iBAAiBwB,KAAK,SAAxC,2BChDVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.879b55ca.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggleImportance}) => {\r\n    const label= note.important? \"Make no important\"\r\n    :\"Make important\"\r\n  return (\r\n    <div>\r\n      <li>{note.content}</li>\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import axios from 'axios'\r\nconst baseUrl = 'https://glacial-depths-56336.herokuapp.com/api/notes'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nexport default { \r\n  getAll, \r\n  create, \r\n  update\r\n}","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Note from \"./components/Note\";\nimport axios from \"axios\";\nimport noteService from './services/notes'\n\nconst App = () => {\n  const [notesState, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n\n  useEffect(() => {\n    noteService\n    .getAll()\n    .then(response => {\n      setNotes(response.data)\n    });\n  }, []);\n\n  function addNote(event) {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notesState.length + 1,\n    };\n    noteService\n      .create(noteObject)\n      .then(response => {\n        setNotes(notesState.concat(response.data))\n        setNewNote('')\n      })\n  }\n  function handleNoteChange(e) {\n    setNewNote(e.target.value);\n  }\n  function handleShowAll(e) {\n    e.preventDefault();\n    setShowAll(!showAll);\n  }\n  const toggleImportanceOf = (id) => {\n    const note = notesState.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n  \n    noteService\n      .update(id, changedNote)\n      .then(response => {\n        setNotes(notesState.map(note => note.id !== id ? note : response.data))\n      }).catch(error =>{\n        alert(\n          `the note '${note.content}' was already deleted from server`\n        )\n        setNotes(notesState.filter(n => n.id !== id))\n      })\n  }\n\n  const notesToShow = showAll\n    ? notesState\n    : notesState.filter((note) => note.important);\n\n  return (\n    <div className=\"App\">\n      <div>\n        <h1>Notes</h1>\n        <button className=\"btn btn-show\" onClick={handleShowAll}>\n          Show {showAll ? \"importants\" : \"all\"}\n        </button>\n        <ul>\n          {notesToShow.map((note) => (\n            <Note key={note.id} note={note} toggleImportance={()=>toggleImportanceOf(note.id)}></Note>\n          ))}\n        </ul>\n        <form onSubmit={addNote}>\n          <input value={newNote} onChange={handleNoteChange} />\n          <button className=\"btn btn-submit\" type=\"submit\">\n            save\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only JavaScript',\n    date: '2019-05-30T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2019-05-30T19:20:14.298Z',\n    important: true\n  }\n]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}